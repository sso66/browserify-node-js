Advantages of 0M0

It is fair to ask why we'd use 0MQ for messaging, as opposed to writing everything ourselves. The answer is that the Node community believes in Unix philosophy: "do one thing well."

Although the Node.js core has great, low-level support for binding and connecting to sockets, it leaves out higher-level messaging patterns. 0MQ purpose is to expose high-level messaging patterns and take care of many level networking concerns for you. Take the following examples:

1. 0MQ endpoints automatically reconnect if they become unhitched for any reason - like if there's a hiccup in the network or a process restarts.

2. 0MQ delivers only whole messages, so you don't have to create buffers to deal with chunked data.

3. 0MQ low-overhead protocol takes care of many routing deatils, like sending responses back to the correct clients.

With 0MQ, like with any good library, your application can focus on what really matters. Now, let's get everything set up with npm so that we can build fast, robust messaging applications in Node.js with 0MQ.

To test that the module was installed successfully, run this command:

$ node -p -e 'require("zeromq")' > 0MQ.txt

and, open with notepad.

